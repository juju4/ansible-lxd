---

- name: Configure lxd bridge
  ansible.builtin.template:
    src: lxd-bridge.j2
    dest: /etc/default/lxd-bridge
    mode: 0644
    backup: yes
  notify:
    - Restart lxd-bridge
  register: lxdconf

## FIXME! if executed in kitchen lxd, "Converge failed"
- name: Force restart of lxd to have working network  # noqa no-handler
  ansible.builtin.service:
    name: lxd
    state: restarted
  when: >
    lxdconf.changed and
    (ansible_virtualization_type is not defined or
      not (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
    )
## centos7/vagrant/virtualbox
  failed_when: false

- name: Optional configure lxd dnsmasq
  when: lxd_dnsmasq_conf is defined and lxd_dnsmasq_conf
  block:
    - name: Create config dir
      ansible.builtin.file:
        dest: /etc/lxc
        state: directory
        mode: 0755
    - name: Configure static ip inside dnsmasq
      ansible.builtin.template:
        src: lxc-dnsmasq-hosts.conf.j2
        dest: /etc/lxc/lxc-dnsmasq-hosts.conf
        mode: 0644
        backup: yes
      when: lxd_dnsmasq_staticips is defined and lxd_dnsmasq_staticips != []

- name: Increase subuid/gid
  ansible.builtin.replace:
    dest: "{{ item }}"
    regexp: '^(.*):([0-9]*):([0-9]*)$'
    replace: "\\1:{{ lxd_subid_start }}:{{ lxd_subid_range }}"
    mode: '0644'
    backup: yes
  with_items:
    - /etc/subuid
    - /etc/subgid

- name: Check if lxd is running
  ansible.builtin.shell: "ps axu |grep [l]xd"
  changed_when: false
  register: ps
  ignore_errors: true
- name: Debug | process output
  ansible.builtin.debug:
    var: ps

## FIXME! idempotency issue on xenial: lxd fault at first run / lxd in lxd impact?
- name: Debug | ansible_virtualization_type
  ansible.builtin.debug:
    var: ansible_virtualization_type

- name: Ensure lxd service is started and enabled
  ansible.builtin.service:
    name: lxd
    state: started
    enabled: yes
  when: >
    (ansible_virtualization_type is not defined or
      not (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
    )
## centos7/vagrant/virtualbox
  failed_when: false

- name: Check if lxd is running
  ansible.builtin.shell: "ps axu |grep [l]xd"
  changed_when: false
  register: ps
  ignore_errors: true
- name: Debug | process output
  ansible.builtin.debug:
    var: ps

- name: Optional reboot
  when: >
    (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and
    (ansible_virtualization_type is not defined or not (ansible_virtualization_type == "lxc")) and
    (travisci is not defined or not travisci)
  block:
    - name: Debian | Check if a reboot is required
      register: file
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_checksum: no
    - name: Need to reboot system?
      ansible.builtin.debug:
        msg: "You will need to reboot system. asked ansible not doing it."
      when: file.stat.exists is defined and file.stat.exists and lxd_noreboot is defined and lxd_noreboot
    - name: Reboot system
      ansible.builtin.command:  # noqa no-changed-when
        cmd: /sbin/reboot
      when: file.stat.exists is defined and file.stat.exists and not (lxd_noreboot is defined and lxd_noreboot)
      async: 0
      poll: 0
      failed_when: false
    - name: Waiting for server to come back
      ansible.builtin.wait_for:
        host: "{{ inventory_hostname }}"
        state: started
      delegate_to: localhost
      become: false
      when: file.stat.exists is defined and file.stat.exists and not (lxd_noreboot is defined and lxd_noreboot)

## REVIEW needed: https://github.com/lxc/lxd/blob/master/doc/production-setup.md
- name: Increase fs.inotify.max_user_instances (default 128)
  ansible.posix.sysctl:
    name: "fs.inotify.max_user_instances"
    value: "1048576"
    sysctl_set: yes
    state: present
    sysctl_file: /etc/sysctl.d/10-lxd-inotify.conf
    reload: yes
  when: >
    (ansible_virtualization_type is not defined or
      not (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
    )

- name: Configure user.max_user_namespaces
  ansible.posix.sysctl:
    name: user.max_user_namespaces
    value: '3883'
    sysctl_file: /etc/sysctl.d/99-userns.conf
    reload: yes
  when: >
    (
      (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 18) or
      (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7)
    )
    and
    (ansible_virtualization_type is not defined or
      not (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
    )
